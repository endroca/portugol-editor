/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.forms;

import bsh.EvalError;
import bsh.Interpreter;
import static com.forms.Editor.Threadcode;
import static com.forms.Editor.table_variaveis;
import static com.forms.Editor.util;
import static com.forms.Editor.ConsoleIO;
import com.system.ConsoleIO;
import com.system.TableVariables;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import javax.swing.JOptionPane;

/**
 *
 * @author Andrew
 */
public class Console extends javax.swing.JDialog {


    public Console() {
        
        URL urlicon = Editor.class.getClassLoader().getResource("com/images/pgeditor.png");
        Image icon = Toolkit.getDefaultToolkit().getImage(urlicon);
        setIconImage(icon);

        initComponents();
        ConsoleIO = new ConsoleIO(console_txt);
        table_variaveis = new TableVariables(jTableVariavel);

        execCode();
    }

    private void execCode() {

        //LISTAGEM DE VARIAVEIS
        for (String[] Variavei : util.Variaveis) {
            table_variaveis.add(Variavei[0], util.getTipoVariavelJavaToPt(Variavei[1]), null);
        }

        //LISTAGEM DE VARIAVEIS DO TIPO VETOR
        for (String[] Variavei : util.VariaveisVetor) {
            for (int i = new Integer(Variavei[2]); i <= new Integer(Variavei[3]); i++) {
                table_variaveis.add(Variavei[0] + "[" + i + "]", util.getTipoVariavelJavaToPt(Variavei[1]), null);
            }
        }

        Threadcode = new Thread(new Runnable() {

            @Override
            public void run() {

                Thread.currentThread().setName("Thread - Interpretador");

                long startTime = 0;
                long endTime = 0;
                boolean error = false;
                Interpreter i = new Interpreter();
                System.out.println(util.code_exec[0] + util.code_exec[1] + util.code_exec[2]);
                try {
                    startTime = System.currentTimeMillis();
                    i.set("ConsoleIO", ConsoleIO);
                    i.set("table_variaveis", table_variaveis);
                    i.eval(util.code_exec[0] + util.code_exec[1] + util.code_exec[2]);
                } catch (EvalError ex) {
                    JOptionPane.showMessageDialog(null, "Erro de syntax: Há algum erro critico de syntax no seu código. Linha:" + (ex.getErrorLineNumber() - 1), "Erro de syntax", JOptionPane.WARNING_MESSAGE);
                    error = true;
                } finally {
                    endTime = System.currentTimeMillis();
                    ConsoleIO.println("");
                    ConsoleIO.println("");
                    if (!error) {
                        ConsoleIO.print("Programa finalizado. Tempo de duração: " + (endTime - startTime) / 1000 + " segundos", util.AttrColor("codigo_finalizado"));
                    } else {
                        ConsoleIO.print("Programa finalizado. Tempo de duração: " + (endTime - startTime) / 1000 + " segundos", util.AttrColor("codigo_finalizado_error"));
                    }
                    ConsoleIO.finalizacao();

                }
            }

        });
        Threadcode.start();
    }

    public void close() {
        ConsoleIO.interrupt();
        dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        console_txt = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableVariavel = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Console I/O");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeWindow(evt);
            }
        });

        jSplitPane1.setDividerLocation(600);
        jSplitPane1.setResizeWeight(0.5);

        console_txt.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        console_txt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        console_txt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(console_txt);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jTableVariavel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Variável", "Tipo", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableVariavel.setCellSelectionEnabled(true);
        jScrollPane3.setViewportView(jTableVariavel);

        jSplitPane1.setRightComponent(jScrollPane3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 877, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeWindow(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeWindow
        // TODO add your handling code here:
        close();
    }//GEN-LAST:event_closeWindow


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane console_txt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTableVariavel;
    // End of variables declaration//GEN-END:variables
}
