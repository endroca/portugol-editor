package com.analizador.exe_expressao;

import java_cup.runtime.*;

parser code
{:
    public static void main(String args[]) throws Exception{
        new parser(new Yylex(System.in)).parse();
    }
    public void syntax_error(Symbol s){
        report_error("Erro de syntax: Linha "+(s.left+1)+" Coluna "+(s.right)+". Trecho desconhecido: \""+s.value+"\"",null);
    }
:}

/* Terminals (tokens returned by the scanner). */
terminal           SEMI, PLUS, MINUS, TIMES, DIVIDE, MOD;
terminal           UMINUS, LPAREN, RPAREN;
terminal Integer   NUMBER;

/* Non-terminals */
non terminal            expr_list, expr_part;
non terminal Integer    expr;

/* Precedences */
precedence left PLUS, MINUS;
precedence left TIMES, DIVIDE, MOD;
precedence left UMINUS;

/* The grammar */
expr_list ::= expr_list expr_part 	| 
              expr_part 			| 
              error {::}			;

expr_part ::= expr:e SEMI {: System.out.println("= " + e); :};


expr      ::= expr:e1 PLUS expr:e2		{: RESULT = new Integer(e1.intValue() + e2.intValue()); :} 	| 
              expr:e1 MINUS expr:e2		{: RESULT = new Integer(e1.intValue() - e2.intValue()); :} 	| 
              expr:e1 TIMES expr:e2		{: RESULT = new Integer(e1.intValue() * e2.intValue()); :} 	| 
              expr:e1 DIVIDE expr:e2	{: RESULT = new Integer(e1.intValue() / e2.intValue()); :} 	| 
              expr:e1 MOD expr:e2 		{: RESULT = new Integer(e1.intValue() % e2.intValue()); :} 	| 
              NUMBER:n                 	{: RESULT = n; :}											| 
              MINUS expr:e             	{: RESULT = new Integer(0 - e.intValue()); :} %prec UMINUS	| 
              LPAREN expr:e RPAREN     	{: RESULT = e; :} 											;